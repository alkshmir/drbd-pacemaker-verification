---
- hosts: all
  gather_facts: true
  tasks:
    - name: Install DRBD
      include_role:
        name: drbd

- hosts: all[0]
  gather_facts: true
  tasks:
    - name: Destroy pacemaker cluster
      command: pcs cluster destroy
      ignore_errors: true

    - name: Syncronize DRBD
      command: drbdadm primary --force r0

## make pacemaker cluster
- name: Start pacemaker
  hosts: all
  tasks:
    - name: Start pacemaker
      systemd:
        state: started
        name: pcsd
        enabled: true

    - name: Set hacluster user password
      user:
        name: hacluster
        state: present
        password: "{{ 'hacluster123' | password_hash('sha512') }}"

    - name: Add node IPs into /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ hostvars[item]['internal_ip'] }} {{ item }}"
        state: present
      with_items: "{{ groups['all'] }}"
      when: hostvars[item]['internal_ip'] is defined

- name: Make pacemaker cluster
  hosts: all[0]
  tasks:
    - name: Delete pacemaker cluster
      command: pcs cluster destroy
      ignore_errors: true

    - name: Authenticate cluster
      command: pcs host auth {% for host in groups['all'] %} {{ host }} {% endfor %} -u hacluster -p hacluster123

    - name: Create pacemaker cluster
      command: pcs cluster setup mycluster {% for host in groups['all'] %} {{ host }} {% endfor %} --force 

    - name: Start cluster
      command: pcs cluster start --all

    - name: Enable cluster
      command: pcs cluster enable --all

    - name: Disable stonith (fencing) # XXX: Do not disable stonith on prod cluster, or enable quorum
      command: pcs property set stonith-enabled=false

    - name: Ignore no quorum
      command: pcs property set no-quorum-policy=ignore

    - name: Show status of cluster
      command: pcs status
      register: pcs_status

    - debug:
        msg: "{{ pcs_status.stdout }}"

## manage DRBD by pacemaker

    - name: Check if drbd_r0 already created
      command: pcs resource describe drbd_r0
      register: drbd_r0_created
      ignore_errors: true

    - name: Create drbd_r0 pacemaker resource
      command: pcs resource create drbd_r0 ocf:linbit:drbd drbd_resource=r0 op monitor interval=10s op start timeout=240 op stop timeout=100 op promote timeout=60 op demote timeout=60
      when: drbd_r0_created.rc != 0

    - name: Define drbd_r0 as master slave resource
      command: pcs resource promotable drbd_r0 ms_drbd_r0 master-max=1 master-node-max=1 clone-max=2 clone-node-max=1 notify=true
      when: drbd_r0_created.rc != 0

## make ext4 filesystem on top of DRBD

    - name: Check if fs_drbd_1 already created
      command: pcs resource describe fs_drbd1
      register: fs_drbd1_created
      ignore_errors: true

    - name: Make ext4 filesystem on top of DRBD
      command: pcs resource create fs_drbd1 ocf:heartbeat:Filesystem device=/dev/drbd1 directory=/var/lib/pgsql fstype=ext4 --group postgres
      when: fs_drbd1_created.rc != 0

    - name: Make fs_drbd1 run on drbd_r0 master
      command: pcs constraint colocation add ms_drbd_r0 with Master postgres
      when: fs_drbd1_created.rc != 0

    - name: Make resource group postgres run after drbd_r0 launches
      command: pcs constraint order promote ms_drbd_r0 then start postgres
      when: fs_drbd1_created.rc != 0

    - name: Cleanup resources
      command: pcs resource cleanup

- hosts: all
  gather_facts: true
  tasks:
    - name: Install PostgreSQL
      include_role:
        name: postgres

- hosts: all[0]
  gather_facts: true
  tasks:
    - name: Copy PostgreSQL data to drbd device
      copy:
        remote_src: true
        src: /var/lib/postgresql/15
        dest: /var/lib/pgsql/
        owner: postgres
        group: postgres

    - name: Start postgresql
      systemd:
        name: postgresql
        state: started

    - name: Create user custom_user
      become: true
      become_user: postgres
      retries: 5
      delay: 5
      postgresql_user:
        db: postgres
        name: custom_user
        role_attr_flags: LOGIN

    # TODO: check postgresql already created
    - name: Make postgresql pacemaker resource
      command: pcs resource create postgresql ocf:heartbeat:pgsql pgctl="/usr/lib/postgresql/15/bin/pg_ctl" psql="/usr/bin/psql" config="/etc/postgresql/15/main/postgresql.conf" socketdir="/var/run/postgresql" pgdata="/var/lib/pgsql/15/main" op monitor interval="30s" --group postgres

